package recsys;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.TreeMap;

public class Recommender {

	/**
	 * @param args
	 * @throws IOException 
	 */
	public static void main(String[] args) throws IOException {
		String USER_FILE = args[0];
		String ITEM_FILE = args[1];
		String RATING_FILE = args[2];
		HashMap<Integer, HashMap<Integer,Integer>> ratings = LoadInput.loadRatings(RATING_FILE);
		HashMap<Integer, User> users = LoadInput.loadUsers(USER_FILE);
		HashMap<Integer, Item> items = LoadInput.loadItems(ITEM_FILE);
		UserBasedRecommender recommender = new UserBasedRecommender(ratings,users);
		BufferedWriter fout = new BufferedWriter(new FileWriter("output"));
		for (Integer user : users.keySet()) {
			HashMap<Integer,Double> predictions = new HashMap<Integer,Double>();
			ValueComparator bvc =  new ValueComparator(predictions);
			TreeMap<Integer, Double> itemsPredications = new TreeMap<Integer, Double>(bvc);
			Integer count = 0;
			for (Integer item : items.keySet()) {
				if (!ratings.get(user).containsKey(item) && count < 100){
					predictions.put(item, recommender.predictRating(users.get(user), items.get(item), 100));
					count++;
				}
			}
			itemsPredications.putAll(predictions);
			recommender.users.get(user).setItemsPredications(itemsPredications);
			for (Integer item : recommender.users.get(user).getItemsPredications().keySet()){
				fout.write(user + "	" + item + "	" + recommender.users.get(user).getItemsPredications().get(item) + "\n");
			}
			fout.close()
			
			
		
			break;
		}

	}

}
