package pa3;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.BreakIterator;
import java.text.ParseException;
import java.util.Iterator;

import javax.swing.text.html.HTMLEditorKit.Parser;

import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
public class Indexer {
	
	public Indexer(String itemsFilename) {
		
		JSONParser parser = new JSONParser();
		String s;
		try {
			BufferedReader in = new BufferedReader(new FileReader(itemsFilename));
			while((s = in.readLine()) != null){
	            String[] var = s.split(" ", 2);
	            Integer index = Integer.parseInt(var[0]);
	            Object obj = parser.parse(var[1]);
	            JSONObject jsonObject = (JSONObject) obj;
	            String plot = (String) jsonObject.get("Plot");
	            System.out.println(plot);
	            BreakIterator boundary = BreakIterator.getWordInstance();
	            boundary.setText(plot);
	            for (int end = boundary.next();
	                    end != BreakIterator.DONE;
	                    start = end, end = boundary.next()) {
	                    System.out.println(source.substring(start,end));
	               }
	        }
	        in.close();

		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} catch (org.json.simple.parser.ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
	}

	public void execute(){
		
	}
	
	// map from a term to a list of movies that contain the term
	public void invertedIndex(){
		
	}
	//  map from a movie to a list of terms contained by the movie
	public void directedIndex(){
		
	}
}
